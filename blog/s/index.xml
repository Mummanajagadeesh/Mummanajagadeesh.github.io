<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>s on Jagadeesh Mummana | Portfolio</title><link>https://mummanajagadeesh.github.io/blog/s/</link><description>Recent content in s on Jagadeesh Mummana | Portfolio</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 10 Jun 2025 05:30:00 +0000</lastBuildDate><atom:link href="https://mummanajagadeesh.github.io/blog/s/index.xml" rel="self" type="application/rss+xml"/><item><title>Sensors in Robotics: How Ultrasonic, LiDAR, and IMU Work</title><link>https://mummanajagadeesh.github.io/blog/sensors-in-robotics/</link><pubDate>Tue, 10 Jun 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/sensors-in-robotics/</guid><description>Sensors are to robots what eyes, ears, and skin are to humans—but with far fewer limits. While we rely on just five senses, robots can be equipped with many more, sensing distances, movement, vibrations, orientation, light intensity, and even chemical properties.</description></item><item><title>Debugging a Robot In Simulation Before You Burn Wires</title><link>https://mummanajagadeesh.github.io/blog/robotics-simulation-tools/</link><pubDate>Wed, 04 Jun 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/robotics-simulation-tools/</guid><description>Hardware does not come with an undo button. Once you power it on, mistakes—from reversed wiring to faulty code—can result in costly damage.</description></item><item><title>Computer Vision vs. Sensor Fusion: Who Wins the Self-Driving Car Race?</title><link>https://mummanajagadeesh.github.io/blog/cv-vs-sensor-fusion/</link><pubDate>Fri, 30 May 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/cv-vs-sensor-fusion/</guid><description>Tesla&amp;rsquo;s bold claim that “humans drive with eyes and a brain, so our cars will too” sparked one of the most polarizing debates in autonomous vehicle (AV) technology: Can vision-only systems truly compete with—or even outperform—multi-sensor fusion architectures?</description></item><item><title>Understanding the Basics of Machine Learning</title><link>https://mummanajagadeesh.github.io/blog/understanding-the-basics-of-ml/</link><pubDate>Thu, 22 May 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/understanding-the-basics-of-ml/</guid><description>Machine learning is something that shows up all around us today—whether we&amp;rsquo;re aware of it or not. From personalized suggestions on YouTube and Netflix to automatic spam filtering in our inboxes, it’s quietly powering a lot of the tools we use daily.</description></item><item><title>Why RISC-V Can Be a Game Changer?</title><link>https://mummanajagadeesh.github.io/blog/why-riscv-is-better/</link><pubDate>Thu, 15 May 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/why-riscv-is-better/</guid><description>In a world dominated by proprietary chip architectures, a quiet shift is underway. RISC-V, an open-source alternative, is redefining how we think about processor design—especially in the VLSI world—by enabling greater customization, transparency, and control at the hardware level.</description></item><item><title>Introduction to VLSI Design Flow: RTL to GDSII</title><link>https://mummanajagadeesh.github.io/blog/vlsi-design-flow/</link><pubDate>Thu, 08 May 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/vlsi-design-flow/</guid><description>Wonder why AI, modern smartphones, and countless digital devices have become so powerful yet compact? The secret lies in the ability to pack billions of transistors into tiny silicon chips — a feat accomplished through Very Large-Scale Integration (VLSI).</description></item><item><title>ROS 2 vs ROS 1: What Changed and Why It Matters?</title><link>https://mummanajagadeesh.github.io/blog/ros1-vs-ros2/</link><pubDate>Fri, 02 May 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/ros1-vs-ros2/</guid><description>Is ROS 1 still the right choice for your next robotics project, with its well-established tools and wide community support? Or, given the growing demand for real-time performance, scalability, and modern middleware, is it finally time to make the move to ROS 2?</description></item><item><title>What is SLAM? And Why It’s the Brain of Mobile Robots</title><link>https://mummanajagadeesh.github.io/blog/what-is-slam/</link><pubDate>Sun, 20 Apr 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/what-is-slam/</guid><description>In robotics, SLAM—Simultaneous Localization and Mapping—is regarded as one of the most fundamental and complex problems. At its core, SLAM addresses a deceptively simple question: &amp;ldquo;Where am I, and what does the world around me look like?</description></item><item><title>Switch to Linux and Thank Me Later</title><link>https://mummanajagadeesh.github.io/blog/switch-to-linux-and-thank-me-later/</link><pubDate>Tue, 15 Apr 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/switch-to-linux-and-thank-me-later/</guid><description>You&amp;rsquo;re not really using your computer — you&amp;rsquo;re being allowed to. If the system decides how you work, who’s really in control?</description></item><item><title>I²C: Fundamentals and Practical Aspects of Inter-Integrated Circuit Communication</title><link>https://mummanajagadeesh.github.io/blog/i2c/</link><pubDate>Tue, 08 Apr 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/i2c/</guid><description>I²C is a synchronous, half-duplex, multi-master, multi-slave serial communication protocol developed by Philips (now NXP) in the 1980s. It was designed for on-board communication between integrated circuits, especially in systems with multiple low-speed peripherals controlled by a microcontroller.</description></item><item><title>SPI: Understanding the Serial Peripheral Interface Protocol</title><link>https://mummanajagadeesh.github.io/blog/spi/</link><pubDate>Tue, 01 Apr 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/spi/</guid><description>SPI is a synchronous serial communication protocol designed for high-speed, full-duplex data exchange between a master device and one or more peripheral (slave) devices.</description></item><item><title>UART: A Detailed Overview of Asynchronous Serial Communication</title><link>https://mummanajagadeesh.github.io/blog/uart/</link><pubDate>Thu, 27 Mar 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/uart/</guid><description>UART is one of the oldest and most fundamental methods of serial communication in embedded systems. As its name suggests, it operates asynchronously, meaning there is no shared clock signal between the transmitter and the receiver.</description></item><item><title>Demystifying UART, SPI, and I2C: Communication Between Chips</title><link>https://mummanajagadeesh.github.io/blog/communication-between-chips/</link><pubDate>Mon, 24 Mar 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/communication-between-chips/</guid><description>In both VLSI design and embedded systems, no chip operates in isolation. Whether it&amp;rsquo;s a microcontroller interfacing with sensors, a processor communicating with memory modules, or multiple peripherals synchronizing data, inter-chip communication is fundamental to building reliable and scalable hardware systems.</description></item><item><title>Kociemba’s Algorithm – The Two-Phase Breakthrough #PID1.5</title><link>https://mummanajagadeesh.github.io/blog/kociembas-alg-the-2-phase-breakthrough/</link><pubDate>Tue, 18 Mar 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/kociembas-alg-the-2-phase-breakthrough/</guid><description>Kociemba’s algorithm revolutionizes Rubik’s Cube solving by efficiently navigating the immense complexity of the cube’s state space using advanced mathematical tools from group theory and heuristic search.</description></item><item><title>How Do Computers Come into the Art of Solving Puzzles? #PID1.4</title><link>https://mummanajagadeesh.github.io/blog/computers-in-the-art-of-solving-puzzles/</link><pubDate>Fri, 07 Mar 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/computers-in-the-art-of-solving-puzzles/</guid><description>Throughout history, puzzles have intrigued the human mind, not merely for entertainment but for the challenge they pose to logic, creativity, and persistence.</description></item><item><title>Getting Started with Hugo: A Step-by-Step Guide</title><link>https://mummanajagadeesh.github.io/blog/getting-started-with-hugo/</link><pubDate>Sat, 01 Mar 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/getting-started-with-hugo/</guid><description>Hugo is a fast, flexible, and open-source static site generator that allows you to build websites with ease. Originally popular for blogging, Hugo’s versatility makes it ideal for creating a wide range of sites — from personal portfolios and academic project showcases to documentation hubs and even e-commerce sites.</description></item><item><title>The Mathematics Behind the Rubik's Cube #PID1.3</title><link>https://mummanajagadeesh.github.io/blog/mathematics-behind-rubiks-cube/</link><pubDate>Tue, 25 Feb 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/mathematics-behind-rubiks-cube/</guid><description>The Rubik’s Cube is not just a puzzle; it’s a deep mathematical object grounded in group theory, combinatorics, and geometry. Understanding the math behind it allows us to grasp why it has 43 quintillion possible states, how we categorize moves, and why some solutions are more efficient than others.</description></item><item><title>Setting Up Icarus Verilog on Google Colab</title><link>https://mummanajagadeesh.github.io/blog/setting-up-icarus-verilog-on-google-colab/</link><pubDate>Wed, 19 Feb 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/setting-up-icarus-verilog-on-google-colab/</guid><description>Google Colab is a cloud-based platform that allows you to run code in a Jupyter Notebook environment. While it&amp;rsquo;s primarily designed for Python, it can also be adapted to run Verilog simulations using Icarus Verilog.</description></item><item><title>Solving The Rubiks Cube #PID1.2</title><link>https://mummanajagadeesh.github.io/blog/solving-the-rubiks-cube/</link><pubDate>Wed, 12 Feb 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/solving-the-rubiks-cube/</guid><description>Solving a Rubik’s Cube isn’t just about memorizing algorithms — it’s about understanding how moves affect the pieces. There are several solving methods, each with its own approach.</description></item><item><title>Why Everyone’s Talking About DeepSeek?</title><link>https://mummanajagadeesh.github.io/blog/why-everyone-is-talking-about-deepseek/</link><pubDate>Thu, 06 Feb 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/why-everyone-is-talking-about-deepseek/</guid><description>Over the last few weeks, one name has kept popping up across AI forums, Twitter feeds, and GitHub discussions: DeepSeek. Whether it&amp;rsquo;s about their models, benchmarks, or training philosophy, there&amp;rsquo;s been a noticeable shift in attention toward this new but fast-rising player in the open-source LLM space.</description></item><item><title>Mechanics of Rubiks Cube #PID1.1</title><link>https://mummanajagadeesh.github.io/blog/mechanics-of-rubiks-cube/</link><pubDate>Fri, 31 Jan 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/mechanics-of-rubiks-cube/</guid><description>The Rubik’s Cube is a 3D combination puzzle that has fascinated minds for decades. Invented in 1974 by Ernő Rubik, a Hungarian architect and professor, it was originally called the &amp;ldquo;Magic Cube.</description></item><item><title>Why Should You Start Solving Puzzles? #PID1.0</title><link>https://mummanajagadeesh.github.io/blog/why-should-you-start-solving-puzzles/</link><pubDate>Fri, 24 Jan 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/why-should-you-start-solving-puzzles/</guid><description>Whether it&amp;rsquo;s a crossword, Sudoku, or a complex jigsaw, puzzles have a unique way of capturing our attention. But what makes solving them feel so rewarding?</description></item><item><title>My RosConIN'24 (+GNOME Asia Summit) Experience</title><link>https://mummanajagadeesh.github.io/blog/my-rosconin24-experience/</link><pubDate>Fri, 17 Jan 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/my-rosconin24-experience/</guid><description>Last year, I missed ROSCon India due to exams and, honestly, had no idea what I was missing out on. This year, though, I made it, and it turned out to be more than I ever imagined.</description></item><item><title>Why Blog in 2025? (And How to Get Started)</title><link>https://mummanajagadeesh.github.io/blog/why-blog-in-2025/</link><pubDate>Fri, 10 Jan 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/why-blog-in-2025/</guid><description>In 2025, with the internet brimming with TikToks, reels, and AI-generated articles, you might wonder—is blogging still worth it?
The answer is a resounding YES, and here’s why.</description></item><item><title>Hello World!! (Why I Built This Blog)</title><link>https://mummanajagadeesh.github.io/blog/hello-world/</link><pubDate>Fri, 03 Jan 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/hello-world/</guid><description>Hello, and thank you for visiting. My name is Jagadeesh, and this blog is a personal and professional record of my journey through college, projects, and the experiences that continue to shape my interests and aspirations.</description></item></channel></rss>