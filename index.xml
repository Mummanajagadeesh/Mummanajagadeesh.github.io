<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jagadeesh Mummana | Portfolio</title><link>https://mummanajagadeesh.github.io/</link><description>Recent content on Jagadeesh Mummana | Portfolio</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 10 Jun 2025 05:30:00 +0000</lastBuildDate><atom:link href="https://mummanajagadeesh.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Sensors in Robotics: How Ultrasonic, LiDAR, and IMU Work</title><link>https://mummanajagadeesh.github.io/blog/sensors-in-robotics/</link><pubDate>Tue, 10 Jun 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/sensors-in-robotics/</guid><description>Sensors are to robots what eyes, ears, and skin are to humans—but with far fewer limits. While we rely on just five senses, robots can be equipped with many more, sensing distances, movement, vibrations, orientation, light intensity, and even chemical properties.</description></item><item><title>Debugging a Robot In Simulation Before You Burn Wires</title><link>https://mummanajagadeesh.github.io/blog/robotics-simulation-tools/</link><pubDate>Wed, 04 Jun 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/robotics-simulation-tools/</guid><description>Hardware does not come with an undo button. Once you power it on, mistakes—from reversed wiring to faulty code—can result in costly damage.</description></item><item><title>Computer Vision vs. Sensor Fusion: Who Wins the Self-Driving Car Race?</title><link>https://mummanajagadeesh.github.io/blog/cv-vs-sensor-fusion/</link><pubDate>Fri, 30 May 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/cv-vs-sensor-fusion/</guid><description>Tesla&amp;rsquo;s bold claim that “humans drive with eyes and a brain, so our cars will too” sparked one of the most polarizing debates in autonomous vehicle (AV) technology: Can vision-only systems truly compete with—or even outperform—multi-sensor fusion architectures?</description></item><item><title>Understanding the Basics of Machine Learning</title><link>https://mummanajagadeesh.github.io/blog/understanding-the-basics-of-ml/</link><pubDate>Thu, 22 May 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/understanding-the-basics-of-ml/</guid><description>Machine learning is something that shows up all around us today—whether we&amp;rsquo;re aware of it or not. From personalized suggestions on YouTube and Netflix to automatic spam filtering in our inboxes, it’s quietly powering a lot of the tools we use daily.</description></item><item><title>Why RISC-V Can Be a Game Changer?</title><link>https://mummanajagadeesh.github.io/blog/why-riscv-is-better/</link><pubDate>Thu, 15 May 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/why-riscv-is-better/</guid><description>In a world dominated by proprietary chip architectures, a quiet shift is underway. RISC-V, an open-source alternative, is redefining how we think about processor design—especially in the VLSI world—by enabling greater customization, transparency, and control at the hardware level.</description></item><item><title>Introduction to VLSI Design Flow: RTL to GDSII</title><link>https://mummanajagadeesh.github.io/blog/vlsi-design-flow/</link><pubDate>Thu, 08 May 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/vlsi-design-flow/</guid><description>Wonder why AI, modern smartphones, and countless digital devices have become so powerful yet compact? The secret lies in the ability to pack billions of transistors into tiny silicon chips — a feat accomplished through Very Large-Scale Integration (VLSI).</description></item><item><title>ROS 2 vs ROS 1: What Changed and Why It Matters?</title><link>https://mummanajagadeesh.github.io/blog/ros1-vs-ros2/</link><pubDate>Fri, 02 May 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/ros1-vs-ros2/</guid><description>Is ROS 1 still the right choice for your next robotics project, with its well-established tools and wide community support? Or, given the growing demand for real-time performance, scalability, and modern middleware, is it finally time to make the move to ROS 2?</description></item><item><title>What is SLAM? And Why It’s the Brain of Mobile Robots</title><link>https://mummanajagadeesh.github.io/blog/what-is-slam/</link><pubDate>Sun, 20 Apr 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/what-is-slam/</guid><description>In robotics, SLAM—Simultaneous Localization and Mapping—is regarded as one of the most fundamental and complex problems. At its core, SLAM addresses a deceptively simple question: &amp;ldquo;Where am I, and what does the world around me look like?</description></item><item><title>Switch to Linux and Thank Me Later</title><link>https://mummanajagadeesh.github.io/blog/switch-to-linux-and-thank-me-later/</link><pubDate>Tue, 15 Apr 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/switch-to-linux-and-thank-me-later/</guid><description>You&amp;rsquo;re not really using your computer — you&amp;rsquo;re being allowed to. If the system decides how you work, who’s really in control?</description></item><item><title>I²C: Fundamentals and Practical Aspects of Inter-Integrated Circuit Communication</title><link>https://mummanajagadeesh.github.io/blog/i2c/</link><pubDate>Tue, 08 Apr 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/i2c/</guid><description>I²C is a synchronous, half-duplex, multi-master, multi-slave serial communication protocol developed by Philips (now NXP) in the 1980s. It was designed for on-board communication between integrated circuits, especially in systems with multiple low-speed peripherals controlled by a microcontroller.</description></item><item><title>SPI: Understanding the Serial Peripheral Interface Protocol</title><link>https://mummanajagadeesh.github.io/blog/spi/</link><pubDate>Tue, 01 Apr 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/spi/</guid><description>SPI is a synchronous serial communication protocol designed for high-speed, full-duplex data exchange between a master device and one or more peripheral (slave) devices.</description></item><item><title>UART: A Detailed Overview of Asynchronous Serial Communication</title><link>https://mummanajagadeesh.github.io/blog/uart/</link><pubDate>Thu, 27 Mar 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/uart/</guid><description>UART is one of the oldest and most fundamental methods of serial communication in embedded systems. As its name suggests, it operates asynchronously, meaning there is no shared clock signal between the transmitter and the receiver.</description></item><item><title>Demystifying UART, SPI, and I2C: Communication Between Chips</title><link>https://mummanajagadeesh.github.io/blog/communication-between-chips/</link><pubDate>Mon, 24 Mar 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/communication-between-chips/</guid><description>In both VLSI design and embedded systems, no chip operates in isolation. Whether it&amp;rsquo;s a microcontroller interfacing with sensors, a processor communicating with memory modules, or multiple peripherals synchronizing data, inter-chip communication is fundamental to building reliable and scalable hardware systems.</description></item><item><title>Kociemba’s Algorithm – The Two-Phase Breakthrough #PID1.5</title><link>https://mummanajagadeesh.github.io/blog/kociembas-alg-the-2-phase-breakthrough/</link><pubDate>Tue, 18 Mar 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/kociembas-alg-the-2-phase-breakthrough/</guid><description>Kociemba’s algorithm revolutionizes Rubik’s Cube solving by efficiently navigating the immense complexity of the cube’s state space using advanced mathematical tools from group theory and heuristic search.</description></item><item><title>How Do Computers Come into the Art of Solving Puzzles? #PID1.4</title><link>https://mummanajagadeesh.github.io/blog/computers-in-the-art-of-solving-puzzles/</link><pubDate>Fri, 07 Mar 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/computers-in-the-art-of-solving-puzzles/</guid><description>Throughout history, puzzles have intrigued the human mind, not merely for entertainment but for the challenge they pose to logic, creativity, and persistence.</description></item><item><title>Getting Started with Hugo: A Step-by-Step Guide</title><link>https://mummanajagadeesh.github.io/blog/getting-started-with-hugo/</link><pubDate>Sat, 01 Mar 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/getting-started-with-hugo/</guid><description>Hugo is a fast, flexible, and open-source static site generator that allows you to build websites with ease. Originally popular for blogging, Hugo’s versatility makes it ideal for creating a wide range of sites — from personal portfolios and academic project showcases to documentation hubs and even e-commerce sites.</description></item><item><title>The Mathematics Behind the Rubik's Cube #PID1.3</title><link>https://mummanajagadeesh.github.io/blog/mathematics-behind-rubiks-cube/</link><pubDate>Tue, 25 Feb 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/mathematics-behind-rubiks-cube/</guid><description>The Rubik’s Cube is not just a puzzle; it’s a deep mathematical object grounded in group theory, combinatorics, and geometry. Understanding the math behind it allows us to grasp why it has 43 quintillion possible states, how we categorize moves, and why some solutions are more efficient than others.</description></item><item><title>Setting Up Icarus Verilog on Google Colab</title><link>https://mummanajagadeesh.github.io/blog/setting-up-icarus-verilog-on-google-colab/</link><pubDate>Wed, 19 Feb 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/setting-up-icarus-verilog-on-google-colab/</guid><description>Google Colab is a cloud-based platform that allows you to run code in a Jupyter Notebook environment. While it&amp;rsquo;s primarily designed for Python, it can also be adapted to run Verilog simulations using Icarus Verilog.</description></item><item><title>Solving The Rubiks Cube #PID1.2</title><link>https://mummanajagadeesh.github.io/blog/solving-the-rubiks-cube/</link><pubDate>Wed, 12 Feb 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/solving-the-rubiks-cube/</guid><description>Solving a Rubik’s Cube isn’t just about memorizing algorithms — it’s about understanding how moves affect the pieces. There are several solving methods, each with its own approach.</description></item><item><title>Why Everyone’s Talking About DeepSeek?</title><link>https://mummanajagadeesh.github.io/blog/why-everyone-is-talking-about-deepseek/</link><pubDate>Thu, 06 Feb 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/why-everyone-is-talking-about-deepseek/</guid><description>Over the last few weeks, one name has kept popping up across AI forums, Twitter feeds, and GitHub discussions: DeepSeek. Whether it&amp;rsquo;s about their models, benchmarks, or training philosophy, there&amp;rsquo;s been a noticeable shift in attention toward this new but fast-rising player in the open-source LLM space.</description></item><item><title>Mechanics of Rubiks Cube #PID1.1</title><link>https://mummanajagadeesh.github.io/blog/mechanics-of-rubiks-cube/</link><pubDate>Fri, 31 Jan 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/mechanics-of-rubiks-cube/</guid><description>The Rubik’s Cube is a 3D combination puzzle that has fascinated minds for decades. Invented in 1974 by Ernő Rubik, a Hungarian architect and professor, it was originally called the &amp;ldquo;Magic Cube.</description></item><item><title>Why Should You Start Solving Puzzles? #PID1.0</title><link>https://mummanajagadeesh.github.io/blog/why-should-you-start-solving-puzzles/</link><pubDate>Fri, 24 Jan 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/why-should-you-start-solving-puzzles/</guid><description>Whether it&amp;rsquo;s a crossword, Sudoku, or a complex jigsaw, puzzles have a unique way of capturing our attention. But what makes solving them feel so rewarding?</description></item><item><title>My RosConIN'24 (+GNOME Asia Summit) Experience</title><link>https://mummanajagadeesh.github.io/blog/my-rosconin24-experience/</link><pubDate>Fri, 17 Jan 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/my-rosconin24-experience/</guid><description>Last year, I missed ROSCon India due to exams and, honestly, had no idea what I was missing out on. This year, though, I made it, and it turned out to be more than I ever imagined.</description></item><item><title>Why Blog in 2025? (And How to Get Started)</title><link>https://mummanajagadeesh.github.io/blog/why-blog-in-2025/</link><pubDate>Fri, 10 Jan 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/why-blog-in-2025/</guid><description>In 2025, with the internet brimming with TikToks, reels, and AI-generated articles, you might wonder—is blogging still worth it?
The answer is a resounding YES, and here’s why.</description></item><item><title>Hello World!! (Why I Built This Blog)</title><link>https://mummanajagadeesh.github.io/blog/hello-world/</link><pubDate>Fri, 03 Jan 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/hello-world/</guid><description>Hello, and thank you for visiting. My name is Jagadeesh, and this blog is a personal and professional record of my journey through college, projects, and the experiences that continue to shape my interests and aspirations.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/gpbot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/gpbot/</guid><description>GPBOT - Basic Sensor based General Purpose AMR Do checkout : Basic Line Following Robot Obstacle Avoidance Robot Wall Follower Robot Differential Drive Robot Name GPBOT Description This 4-wheeled robot is equipped with GPS, IMU, LiDAR, Distance Sensors, and a 2-DOF camera (using linear and rotary actuators).</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/gpbot/diffdrive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/gpbot/diffdrive/</guid><description>Differential Drive Robot Simulation Name Differential Drive Robot Description A custom-built robot featuring a differential drive system that calculates its position and movement based on wheel rotations Start June 2024 Repository DDR🔗 Type Individual Level Beginner Skills Simulation, Programming Tools Used Webots, Python Current Status On Hold This repository contains the simulation of a Differential Drive Robot, built from scratch, which uses basic odometry to track its position.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/gpbot/lfr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/gpbot/lfr/</guid><description>Line Follower Robot Name LFRBOT Description This project features a robot that follows a line using basic sensors.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/gpbot/obstacle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/gpbot/obstacle/</guid><description>Obstacle Avoidance Robot Name Obstacle Avoidance Robot Description A robot equipped with basic sensors that detects obstacles and changes direction to avoid collisions without using advanced algorithms Start June 2024 Repository OAR🔗 Type Individual Level Beginner Skills Simulation, Programming Tools Used Webots, Python Current Status On Hold This project simulates a line-following robot using the Webots robotics simulator.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/gpbot/wallfollow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/gpbot/wallfollow/</guid><description>Wall Follower Robot Simulation Name Wall Follower Robot Description The wall-following robot travels along walls in a maze.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/improve/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/improve/</guid><description>ImProVe: IMage PROcessing using VErilog Do checkout : NEural NEtwork in VERilog Name ImProVe Description ImProVe (Image Processing using Verilog) is a project focused on implementing image processing techniques using Verilog.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/improve/fixed-point/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/improve/fixed-point/</guid><description>Fixed-Point Conversion Report for EMNIST Neural Network Introduction This report describes how I transitioned the EMNIST neural network implementation from floating-point arithmetic to fixed-point representation.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/improve/never/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/improve/never/</guid><description>NeVer: NEural NEtwork in VERilog Do Checkout Main Project: ImProVe: IMage PROcessing using VErilog Name NeVer Description NeVer implements a neural network in Verilog for better hardware acceleration of image processing tasks Start 28 Feb 2025 Repository NeVer🔗 Type Individual Level Beginner Skills Image Processing, HDL, Computer Vision, Programming, ML Tools Used Verilog, Icarus, Perl, TCL, Quartus, C++, Python, NumPy Current Status Ongoing (Active) Progress - Implemented detection of MNIST digits (0-9) - Added support for EMNIST, enabling classification of 62 character classes - Integrated real-time inference with a Tkinter-based character drawing interface, achieving approx 1.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/isro-anav/challenge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/isro-anav/challenge/</guid><description>For complete official details and documentation, visit the ISRO IRoC-U2025.
IRoC-U 2025 – Technical Challenge Summary Challenge Overview Design and demonstrate an Autonomous Navigation System for an Aerial Vehicle (ANAV) that can function in a simulated Martian environment without any external navigation aids like GNSS, pseudolites, or reflectors.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/isro-anav/simulation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/isro-anav/simulation/</guid><description>Simulation of Martian Arena in Webots for Autonomous Drone Testing Introduction To develop and evaluate autonomous drone navigation algorithms in a Mars-like environment, we replicated a Martian surface arena within the Webots simulation platform.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/never/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/never/</guid><description>NeVer: NEural NEtwork in VERilog Do Checkout Main Project: ImProVe: IMage PROcessing using VErilog Name NeVer Description NeVer implements a neural network in Verilog for better hardware acceleration of image processing tasks Start 28 Feb 2025 Repository NeVer🔗 Type Individual Level Beginner Skills Image Processing, HDL, Computer Vision, Programming, ML Tools Used Verilog, Icarus, Perl, TCL, Quartus, Python, NumPy Current Status Ongoing (Active) Progress - Implemented detection of MNIST digits (0-9) - Added support for EMNIST, enabling classification of 62 character classes - Integrated real-time inference with a Tkinter-based character drawing interface, achieving approx 1.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/pidc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/pidc/</guid><description>PIDC - PID Controller using OpAmps Name PIDC Description Implemented a PID controller using operational amplifiers to regulate system response and maintain desired performance.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/prosarm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/prosarm/</guid><description>PR057H371C4RM Name PR057H371C4RM Description A simple prosthetic arm that utilizes servo motors to create tension in strings, replicating the function of human tendons to achieve realistic finger motion.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/protocols/i2c_code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/protocols/i2c_code/</guid><description>MASTER `timescale 1ns / 1ps // Main module declaration module i2c_master( input wire clk, // System clock input wire rst, // Reset signal input wire [6:0] addr, // 7-bit I2C slave address input wire [7:0] data_in, // Data to send to slave in write mode input wire enable, // Start signal for I2C communication input wire rw, // Read/Write control (0 for write, 1 for read) output reg [7:0] data_out, // Data received from slave in read mode output wire ready, // Indicates when the master is ready for a new transaction inout i2c_sda, // I2C data line (SDA) - bidirectional inout wire i2c_scl // I2C clock line (SCL) - bidirectional ); // Define states for I2C master FSM localparam IDLE = 0; localparam START = 1; localparam ADDRESS = 2; localparam READ_ACK = 3; localparam WRITE_DATA = 4; localparam WRITE_ACK = 5; localparam READ_DATA = 6; localparam READ_ACK2 = 7; localparam STOP = 8; localparam DIVIDE_BY = 4; // Clock divider to generate I2C clock from system clock reg [7:0] state; // Current state of the FSM reg [7:0] saved_addr; // Stores the 7-bit address and RW bit for the current transaction reg [7:0] saved_data; // Data to be sent in write transactions reg [7:0] counter; // Bit counter for data/address transmission reg [7:0] counter2 = 0; // Divider counter for generating i2c_clk reg write_enable; // Controls whether the master drives SDA line reg sda_out; // Data to output on SDA line when write_enable is 1 reg i2c_scl_enable = 0; // Controls the state of the i2c_scl line (enabled or high) reg i2c_clk = 1; // Internal I2C clock signal // Ready signal is high when the master is idle and not in reset assign ready = ((rst == 0) &amp;amp;&amp;amp; (state == IDLE)) ?</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/protocols/i2cv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/protocols/i2cv/</guid><description>I2C Protocol Verilog Implementation using FSM Name I2C Protocol Description Verilog Implementation of I2C Protocol using Finite State Machine (FSM) design Start 06 Nov 2024 Repository I2CV🔗 Type Individual Level Beginner Skills HDL, Protocols, Programming Tools Used Verilog, Icarus, Xilinx Current Status On Hold This project implements the I2C protocol in Verilog with various versions and configurations.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/rubec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/rubec/</guid><description>RU83C: Rubik&amp;rsquo;s Cube Solving Robot Name RU83C Description Rubik&amp;rsquo;s Cube-solving robot using Kociemba algorithm, featuring computer vision for state detection, mechanical design for cube manipulation, and electronics for execution.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/shopping-cart-bot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/shopping-cart-bot/</guid><description>Shopping Cart Bot Name Shopping Cart Bot Description The Shopping Cart Bot is a robotics project designed to automate the shopping experience by utilizing computer vision and autonomous navigation.</description></item><item><title/><link>https://mummanajagadeesh.github.io/projects/tlcv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/tlcv/</guid><description>TRAFFIC LIGHT CONTROLLER 🚦 Name TLC using Verilog Description Verilog Implementation of Traffic Light Controller Start 05 Apr 2024 Repository TLCV🔗 Type Individual Level Beginner Skills HDL, Programming Tools Used Verilog, Icarus, Xilinx Current Status On Hold The original version, which utilizes FSM, is currently on hold.</description></item><item><title>:~$ whoami</title><link>https://mummanajagadeesh.github.io/about_1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/about_1/</guid><description>I’m from Visakhapatnam, Andhra Pradesh, and currently a sophomore at NIT Calicut, studying Electronics and Communication Engineering.
As an electronics student, I have a strong interest in digital and mixed-signal VLSI design, as well as hardware optimization.</description></item><item><title>About ME</title><link>https://mummanajagadeesh.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/about/</guid><description>I’m from Visakhapatnam, Andhra Pradesh, and currently a sophomore at NIT Calicut, studying Electronics and Communication Engineering.
As an electronics student, I have a strong interest in digital design and analog circuitry.</description></item><item><title>ANAV for Martian Surface Exploration</title><link>https://mummanajagadeesh.github.io/projects/isro-anav/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/isro-anav/</guid><description>ANAV for Martian Surface Exploration
Name ISRO-ANAV Description The designed ANAV is a sub-2 kg rotorcraft built for GNSS-denied environments, capable of autonomous take-off, terrain scanning, safe landing, and return.</description></item><item><title>Basic Sensor-Based Mobile Robots</title><link>https://mummanajagadeesh.github.io/projects/gpbot/subprojects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/gpbot/subprojects/</guid><description/></item><item><title>Contact</title><link>https://mummanajagadeesh.github.io/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/contact/</guid><description/></item><item><title>Courses</title><link>https://mummanajagadeesh.github.io/about/courses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/about/courses/</guid><description>EDX CS50P 2022 Harvard | Jan'24 CS50X 2024 Harvard | Sep'24 Coursera Build a Modern Computer from First Principles: From Nand to Tetris (Project-Centered Course) Hebrew University Robotics Specialisation University of Pennsylvania</description></item><item><title>Other Achievements [Secondary School]</title><link>https://mummanajagadeesh.github.io/about/achievements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/about/achievements/</guid><description>Karate Black Belt [DAN Ⅰ] Holder Achieved a Black Belt (DAN Ⅰ) in Karate
Gold Medalist – District Level Karate Tournament Secured 1st place in a district-level Karate tournament Sports Kid of the Year [2018-19] Honored as the Sports Kid of the Year 2018 Gold Medalist – Essay Writing Won 1st place in an essay writing competition Silver Medalist – Vedic Math Achieved 2nd place in a Vedic Mathematics competition</description></item><item><title>Personal Accomplishments and Competitions</title><link>https://mummanajagadeesh.github.io/about/accomplishments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/about/accomplishments/</guid><description>India Semiconductor Workforce Development Program Fellowship – Grade I Awardee (Individual, May &amp;lsquo;25) Selected among the top candidates out of 2,800+ applicants for the ISWDP Fellowship (Grade I), hosted by IISc, Synopsys, and Samsung
ISRO IROC-U Robotics Challenge – Round 1 Qualified (Team, Dec &amp;lsquo;24) Designing an autonomous drone for Martian surface exploration, enabling autonomous operation in GNSS-denied environments Successfully qualified for Elimination Round; Round 3 is ongoing
Circuit Conclave | NITC Tathva – 1st Place (Team, Oct &amp;lsquo;24) Secured 1st place in Circuit Conclave, an electronics design competition focused on innovative circuit solutions Disarmamine | NITC Tathva – 3rd Place (Team, Oct &amp;lsquo;24) Achieved 3rd place in Disarmamine, showcasing expertise in electronics and problem-solving Robotrix'24 | NIT Surathkal – 1st Round Qualified (Individual, Dec &amp;lsquo;24) Successfully cleared Round 1 of Robotrix'24 and participated in the 24-hour robotics simulation hackathon (Round 2) using CoppeliaSim Digital Circuit Design Challenge | NIT Trichy – 1st Round Qualified (Team, Feb &amp;lsquo;25) Cleared Round 1 in Digital Circuit Design Challenge, a challenge focusing on digital electronics and logic design Flipkart GRID Robotics Challenge – 1st Round Qualified (Individual, Aug &amp;lsquo;24) Advanced past Round 1 in the Flipkart GRID Robotics Challenge, an AI-driven robotics competition AWS AI/ML Nano Degree Scholarship | Udacity &amp;amp; Amazon (Mar &amp;lsquo;24) Completed two AI/ML courses and cleared evaluation test as part of the AWS AI/ML Scholarship Program Trained an autonomous racing car using reinforcement learning (RL) to compete against a lap, making it to the leaderboards Became eligible to apply for the AWS AI/ML Nano Degree Scholarship C2S Chip to Startup &amp;ldquo;Digital Hackathon&amp;rdquo; – Participated (Team, Feb &amp;lsquo;25) Competed in Digital Hackathon with a focus on digital electronics, organized under C2S Chip to Startup by Ministry of Electronics &amp;amp; Information Technology (MeitY) Nokia FPGA Hackathon – Participated (Team, Mar &amp;lsquo;25) Participated in FPGA Based Quiz as part of the Round 1 of the competition Bajaj Auto Ohm Challenge – Participated (Team, Feb &amp;lsquo;25) Took part in the Bajaj Auto Ohm Challenge, an engineering competition emphasizing electrical and electronic innovations Bharatiya Antariksh Hackathon (BAH &amp;lsquo;24) – Participated (Team, July &amp;lsquo;24) Developed an AI/ML-based system for automatic detection of craters and boulders from Orbiter High-Resolution Camera (OHRC) images Focused on enhancing planetary exploration through automation and computer vision Bit N Build Around The World 2024 – Participated (Individual, Oct &amp;lsquo;24) 24-hour hackathon; worked on prediction of city traffic using computer vision Competed under the AI/ML domain</description></item><item><title>Positions of Responsibility &amp; Volunteer Work</title><link>https://mummanajagadeesh.github.io/about/positions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/about/positions/</guid><description>RIGNITC Tech Member | Nov'24 - Forever RIGNITC - Robotics Interest Group @ NITC Worked on several real-world interdisciplinary projects as part of robotics enthusiast teams; exhibited lab projects during institute-level and public events Represented NITC in national and international-level hardware competitions, showcasing technical skills and team collaboration Assisted in explaining lab visits to students from various schools, helping bridge the gap between theory and application Conducted peer-to-peer sessions and technical workshops on robotics, embedded systems, and related topics to promote technical learning Helped in organizing ORIGO'25, the annual tech workshop by team RIG, managing both logistics and hands-on sessions
ECEA Executive Assistant | Event Management | Techincal Team , Oct'24 - Present ECEA - Electronics And Communication Engineering Association @ NITC Helped plan and manage workshops, tech seminars, and project demos in the ECE department, ensuring smooth execution and strong student turnout Assisted first-year students in connecting with faculty Coordinated with alumni for sessions and communication, gaining insights into industry and career opportunities
Tathva'24 Junior Executive | Tech Conclave Committee, Oct'24 Tathva - South India&amp;rsquo;s Largest Techno-management Fest @ NITC Reaching out to YouTubers and influencers via cold emails to invite them to the event; successfully secured one guest attendee Contributed to content writing and poster ideation for event promotion Managed crowd coordination and logistics on the event day Reliance Foundation Mentor for Scholars Reliance Foundation Guiding freshmen and sophomores on core engineering concepts, coding skills, and internship opportunities Providing personalized support to clarify doubts related to their projects and coursework within my domain Scientific Volunteer | Sep'23 Institute for Plasma Research (IPR × NITC) | Plasma Exhibition Trained to explain plasma science, its applications, and nuclear fusion to exhibition visitors Demonstrated and provided in-depth explanations of 5+ plasma exhibits to over 100 students, detailing their functions and construction while addressing queries Asteroid Hunter | May &amp;lsquo;24 - Aug &amp;lsquo;24 International Astronomical Search Collaboration (IASC × NASA × Saptarshi India | STAC) Trained in using Astrometrica software to analyze astronomical data for asteroid detection Identified 10+ potential asteroid signatures as part of NASA’s Citizen Science initiative</description></item><item><title>Privacy Policy</title><link>https://mummanajagadeesh.github.io/privacy-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/privacy-policy/</guid><description>Why This Page Exists? No one usually checks what’s in here — but if you&amp;rsquo;re reading this, you&amp;rsquo;re clearly more thorough than most</description></item><item><title>Projects</title><link>https://mummanajagadeesh.github.io/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/</guid><description/></item><item><title>Scholarships Received</title><link>https://mummanajagadeesh.github.io/about/scholarships/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/about/scholarships/</guid><description>India Semiconductor Workforce Development Program (ISWDP) Fellowship Issued by: IISc Bangalore, Synopsys, and Samsung · May 2025 Description: Secured a prestigious fellowship under the Grade I category, awarded to top-performing candidates out of over 2,800 applicants.</description></item><item><title>Search Result</title><link>https://mummanajagadeesh.github.io/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/search/</guid><description/></item><item><title>Verilog HDL Toolkit for Image Processing and Pattern Recognition</title><link>https://mummanajagadeesh.github.io/projects/improve/subprojects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/projects/improve/subprojects/</guid><description>Verilog HDL Toolkit for Image Processing and Pattern Recognition Duration: Individual, Ongoing
Tools: Verilog (Icarus Verilog, Xilinx Vivado) | C++ &amp;amp; Python (OpenCV, NumPy, Tkinter) | Scripting (TCL.</description></item></channel></rss>