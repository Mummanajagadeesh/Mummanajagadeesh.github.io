<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UART on Jagadeesh Mummana | Portfolio</title><link>https://mummanajagadeesh.github.io/tags/uart/</link><description>Recent content in UART on Jagadeesh Mummana | Portfolio</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 27 Mar 2025 05:30:00 +0000</lastBuildDate><atom:link href="https://mummanajagadeesh.github.io/tags/uart/index.xml" rel="self" type="application/rss+xml"/><item><title>UART: A Detailed Overview of Asynchronous Serial Communication</title><link>https://mummanajagadeesh.github.io/blog/uart/</link><pubDate>Thu, 27 Mar 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/uart/</guid><description>&lt;p>UART is one of the oldest and most fundamental methods of serial communication in embedded systems. As its name suggests, it operates asynchronously, meaning &lt;strong>there is no shared clock signal&lt;/strong> between the transmitter and the receiver. This makes UART especially attractive in scenarios where simplicity and minimal wiring are important.&lt;/p></description></item><item><title>Demystifying UART, SPI, and I2C: Communication Between Chips</title><link>https://mummanajagadeesh.github.io/blog/communication-between-chips/</link><pubDate>Mon, 24 Mar 2025 05:30:00 +0000</pubDate><guid>https://mummanajagadeesh.github.io/blog/communication-between-chips/</guid><description>&lt;p>In both VLSI design and embedded systems, no chip operates in isolation. Whether it&amp;rsquo;s a microcontroller interfacing with sensors, a processor communicating with memory modules, or multiple peripherals synchronizing data, &lt;strong>inter-chip communication&lt;/strong> is fundamental to building reliable and scalable hardware systems.&lt;/p></description></item></channel></rss>